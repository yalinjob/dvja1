name: One Scan

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug

  push:
    branches:
      - main
      - master
      - dev
  pull_request:
    branches:
      - main
      - master
      - dev

env:
  JFROG_CLI_LOG_LEVEL: 'DEBUG'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          version: '2.56.1'

      - name: Verify JFrog CLI Installation
        run: jfrog -v


      - name: Check DNS Resolution
        run: nslookup soleng.jfrog.io
        
      - name: Verify JFrog Artifactory User and Token
        run: |
          echo "JF_USER: ${{ secrets.JF_USER }}"
          echo "JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}"
          curl -u ${{ secrets.JF_USER }}:${{ secrets.JF_ACCESS_TOKEN }} ${{ secrets.JF_URL }}/artifactory/api/system/ping

      - if: always()   
        name: Feature Branch Repository Update
        run: jf mvnc --repo-resolve-releases=devnet-ya--virtul-version1-mv --repo-resolve-snapshots=devnet-ya--virtul-version1-mv --repo-deploy-releases=devnet-ya--virtul-version1-mv --repo-deploy-snapshots=devnet-ya--virtul-version1-mv
    
        
           
      - name: Maven Build
        run: jf mvn clean install

  
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: yalina/yalina:myapp



      - name: Push Docker image to JFrog Artifactory
        run: docker push  soleng.jfrog.io/devnet-ya--virtual-version1/myapp:latest
        #run: docker push yalina/yalina:myapp  devnet-ya--virtual-version1/myapp:latest


        
