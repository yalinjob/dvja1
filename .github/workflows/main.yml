name: One Scan

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
      - dev
  pull_request:
    branches:
      - main
      - master
      - dev

env:
  JFROG_CLI_LOG_LEVEL: DEBUG
  JFROG_CLI_ENV_EXCLUDE: '*password*;*secret*;*key*;*token*;*auth*;JF_ARTIFACTORY_*;JF_ENV_*;JF_URL;JF_USER;JF_PASSWORD;JF_ACCESS_TOKEN'
  JFROG_CLI_OFFER_CONFIG: false
  JFROG_CLI_BUILD_NAME: One Scan
  JFROG_CLI_BUILD_NUMBER: 159
  JFROG_CLI_BUILD_URL: 'https://github.com/yalinjob/dvja1/actions/runs/9210660988'
  JFROG_CLI_USER_AGENT: setup-jfrog-cli-github-action/4.0.2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          version: '2.56.1'

      - name: Verify JFrog CLI Installation
        run: jfrog -v

      - name: Verify Maven and Java Installation  # Corrected step name
        run: |
          mvn -v  # Corrected command for Maven version check
          java -version  # Corrected command for Java version check

      - name: Check DNS Resolution
        run: nslookup soleng.jfrog.io

      - name: Verify JFrog Artifactory User and Token
        run: |
          echo "JF_USER: ${{ secrets.JF_USER }}"
          echo "JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}"
          echo "JF_URL: ${{ secrets.JF_URL }}"
          curl -u ${{ secrets.JF_USER }}:${{ secrets.JF_ACCESS_TOKEN }} ${{ secrets.JF_URL }}/artifactory/api/system/ping
          
      - name: Configure JFrog CLI
        run: |
          jfrog config add my-server-id \
            --artifactory-url=${{ secrets.JF_URL }}/artifactory \
            --user=${{ secrets.JF_USER }} \
            --access-token=${{ secrets.JF_ACCESS_TOKEN }} \
            --interactive=false
          jfrog config use my-server-id
      - name: Ping Artifactory
        run: jfrog rt ping

      - name: Set Environment Variables
        run: |
          echo "repository=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV
          echo $repository
          
      - name: Feature Branch Repository Update
        run: jfrog mvnc --server-id-resolve=my-server-id --repo-resolve-releases=devnet-ya--virtul-version1-mv --repo-resolve-snapshots=devnet-ya--virtul-version1-mv --repo-deploy-releases=devnet-ya--virtul-version1-mv --repo-deploy-snapshots=devnet-ya--virtul-version1-mv

      - name: Maven Build
        run: |
          jfrog mvn clean install | tee maven_build.log
          
      - name: Upload Maven Build Log
        uses: actions/upload-artifact@v2
        with:
          name: maven-build-log
          path: maven_build.log

      - name: Log in to JFrog Artifactory Docker Registry
        run: docker login soleng.jfrog.io -u ${{ secrets.JF_USER }} --password "${{ secrets.JF_ACCESS_TOKEN }}"

         
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "linux/amd64,linux/arm64"
     
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        id: build
        with:
          file: Dockerfile
          push: true
          platforms: linux/amd64 #, linux/arm64
          tags: soleng.jfrog.io/devnet-ya--virtual-version1/myappversion3:version3


          
