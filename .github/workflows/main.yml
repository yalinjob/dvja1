name: One Scan

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
      - dev
  pull_request:
    branches:
      - main
      - master
      - dev

env:
  JFROG_CLI_LOG_LEVEL: DEBUG
  JFROG_CLI_ENV_EXCLUDE: '*password*;*secret*;*key*;*token*;*auth*;JF_ARTIFACTORY_*;JF_ENV_*;JF_URL;JF_USER;JF_PASSWORD;JF_ACCESS_TOKEN'
  JFROG_CLI_OFFER_CONFIG: false
  JFROG_CLI_BUILD_NAME: One Scan
  JFROG_CLI_BUILD_NUMBER: 159
  JFROG_CLI_BUILD_URL: 'https://github.com/yalinjob/dvja1/actions/runs/9210660988'
  JFROG_CLI_USER_AGENT: setup-jfrog-cli-github-action/4.0.2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          version: '2.56.1'

      - name: Verify JFrog CLI Installation
        run: jfrog -v

      - name: Configure JFrog CLI
        run: |
          jfrog config add my-server-id \
            --artifactory-url=${{ secrets.JF_URL }} \
            --user=${{ secrets.JF_USER }} \
            --access-token=${{ secrets.JF_ACCESS_TOKEN }} \
            --interactive=false
          jfrog config use my-server-id

      - name: Verify JFrog Artifactory User and Token
        run: curl -u ${{ secrets.JF_USER }}:${{ secrets.JF_ACCESS_TOKEN }} ${{ secrets.JF_URL }}/artifactory/api/system/ping

      - name: Configure Maven Settings
        run: |
          mkdir -p ~/.m2
          echo '<settings><servers><server><id>my-repo</id><username>${{ secrets.JF_USER }}</username><password>${{ secrets.JF_ACCESS_TOKEN }}</password></server></servers></settings>' > ~/.m2/settings.xml

      - name: Feature Branch Repository Update
        run: jf mvnc --server-id-resolve=my-server-id --repo-resolve-releases=devnet-ya--virtul-version1-mv --repo-resolve-snapshots=devnet-ya--virtul-version1-mv --repo-deploy-releases=devnet-ya--virtul-version1-mv --repo-deploy-snapshots=devnet-ya--virtul-version1-mv

      - name: Maven Build with Debug
        run: jf mvn clean install -X

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: yalina/yalina:myapp

      - name: Push Docker image to JFrog Artifactory
        run: docker push soleng.jfrog.io/devnet-ya--virtual-version1/myapp:latest
